<style>
    form #customFieldCollection .uv-field-error-icon, form #customFieldCollection .uv-field-success-icon {
        display: none;
    }
    .custom-field-field-display {
        padding-right: 20px;
    }
    .uv-rtl .custom-field-field-display {
        padding-right: 0px;
        padding-left: 20px;
    }
    .cfield-manage-pta {
        right: 5px;
    }
    .uv-rtl .cfield-manage-pta {
        right: unset;
        left: 5px;
    }
    .custom-field-field-display .uv-field-block {
        width: 100%;
        border: solid 1px #B1B1AE;
        border-radius: 3px;
        padding: 8px 10px;
        font-size: 15px;
        color: #333333;
        margin: 10px 0px;
        background: #ebebe4;
        word-wrap: break-word;
    }
    .uv-customize.cfield-manage-pta {
        margin-right: 15px;
    }
    .uv-pre-line {
        white-space: pre-line;
    }
    .uv-split-field {
        display: inline-block;
        clear: both;
        width: 100%;
        margin-top: 10px;
    }
</style>

{% include('@_uvdesk_extension_uvdesk_form_component/widgets/CustomFields/ticketSidebarCustomFieldValidation.html.twig') with {'headerCustomFields':  customFieldCollection} %}

<div class="uv-filter-view uv-customfield-view" id="uv-customfield-view">

    <div class="uv-filter-head">
        <div class="uv-filter-title">
            <h6>{{ 'Custom Field'|trans }}</h6>
            <span>{{ 'Manage Custom Fields to provide additional details with the ticket.'|trans }}</span>
        </div>
        <div class="uv-filter-toggle" id="filter-close-trigger">
            <span></span>
        </div>
    </div>

    <div class="uv-filter-paper" style="top: 120px; padding-top: 20px;">
    {# Bottom dump displays the saved custom field, not the cf of the created ticket #}
    {# {{ dump(customFieldCollection) }} #}
        {% if customFieldCollection is not empty %} {# and user_service.checkPermission('ROLE_AGENT_EDIT_TICKET') %} #}
            <div class="uv-element-block" style="margin: 0px; padding-bottom: 15px; border-bottom: solid 1px #D3D3D3;">
                <h6 class="uv-field-label">{{ 'Manage Custom Fields'|trans }}</h6>
                <span class="uv-customize cfield-manage-pta" style="width: 15px; height: 15px; position: absolute; background-image: url('../../../../../public/bundles/uvdeskcoreframework/images/uvdesk-sprite.svg'); background-position: -44px -46px; top: 23px; cursor: pointer;" title="{{ 'Manage Ticket Custom Fields'|trans }}" data-toggle="tooltip" data-placement="bottom"></span>
            </div>
        {% endif %}
        <form name="customFieldForm" enctype="multipart/form-data">
            <div id="customFieldCollection">
            </div>
        </form>
    </div>
</div>

<script type="text/template" id="customfield-view-node-template">
    <% if (ticketCustomField.encrypted == false) { %>
        <% if (_.contains(['text', 'textarea', 'date', 'datetime', 'time'], customField.fieldType)) { %>
       
            <% print('<span class="uv-pre-line">' + nl2br(ticketCustomField.value) + '</span>') %>
        <% } else if (_.contains(['select', 'radio'], customField.fieldType)) { %>
            <% print('<span>' + ticketCustomField.value + '</span>') %>
        <% } else if (customField.fieldType == 'checkbox') { %>
            <% print('<span>' + ticketCustomField.value + '</span>') %>
        <% } else if (customField.fieldType == 'file') { %>
            <% try { %>
                <% var fileData = $.parseJSON(ticketCustomField.value); %>
                
                <% if (fileData.hasOwnProperty('id') && fileData.hasOwnProperty('path') && fileData.hasOwnProperty('name')) { %>
                    <% print('<span><a href="{{ path('uvdesk_form_component_download_ticket_attachment') }}/' + fileData.id + '" target="_blank">') %>
                    <% print('<i class="fa fa-file"></i>' + fileData.name) %>
                    <% print('</a></span>') %>
                <% } else { %>
                    <% print('<span><a href="' + decodeURIComponent(ticketCustomField.value) + '" target="_blank">') %>
                    <% print('<i class="fa fa-file"></i>' + decodeURIComponent(ticketCustomField.value).split('/').pop()) %>
                    <% print('</a></span>') %>
                <% } %>
            <% } catch (e) { %>
                <% print('<span><a href="' + decodeURIComponent(ticketCustomField.value) + '" target="_blank">') %>
                <% print('<i class="fa fa-file"></i>' + decodeURIComponent(ticketCustomField.value).split('/').pop()) %>
                <% print('</a></span>') %>
            <% } %>
        <% } %>
    <% } else { %>
        <div class="access-field" style="cursor: pointer;"><span>{{ 'Click to view'|trans }}</span></div>
    <% } %>
</script>

<script type="text/template" id="customfield-edit-node-template">
    <% if (customField.fieldType == 'text') { %>
        <input type="text" name="<% print('customFields[' + customField.id + ']') %>" value="<% if (typeof(ticketCustomField) != 'undefined' && ticketCustomField.hasOwnProperty('id')) print(nl2br(ticketCustomField.value, '')) %>" class="uv-field" placeholder="<% print(customField.value) %>" />
    <% } else if (customField.fieldType == 'textarea') { %>
        <textarea name="<% print('customFields[' + customField.id + ']') %>" class="uv-field" placeholder="<% print(customField.value); %>"><% if (typeof(ticketCustomField) != 'undefined' && ticketCustomField.hasOwnProperty('id')) { %><% print(nl2br(ticketCustomField.value, '')) %><% } %></textarea>
    <% } else if (customField.fieldType == 'select') { %>
        <select class="uv-select" name="<% print('customFields[' + customField.id + ']') %>">
            <% _.each(customField.customFieldValues, function(option) { %>
                <% if (typeof(ticketCustomField) != 'undefined' && ticketCustomField.hasOwnProperty('valueId')) { %>
                    <% if (_.contains(ticketCustomField.valueId, option.id)) { %>
                        <option value="<% print(option.id) %>" selected><% print(option.name) %></option>
                    <% } else { %>
                        <option value="<% print(option.id) %>"><% print(option.name) %></option>
                    <% } %>
                <% } else { %>
                    <option value="<% print(option.id) %>"><% print(option.name) %></option>
                <% } %>
            <% }); %>
        </select>
    <% } else if (customField.fieldType == 'radio') { %>
        <% _.each(customField.customFieldValues, function(radio) { %>
            <div class="uv-field-block uv-split-field" style="padding: 1px 0px;">
                <label>
                    <div class="uv-radio">
                        <% if (typeof(ticketCustomField) != 'undefined' && ticketCustomField.hasOwnProperty('valueId')) { %>
                            <% if (_.contains(ticketCustomField.valueId, radio.id)) { %>
                                <input name="<% print('customFields[' + customField.id + ']') %>" type="radio" value="<% print(radio.id) %>" checked />
                            <% } else { %>
                                <input name="<% print('customFields[' + customField.id + ']') %>" type="radio" value="<% print(radio.id) %>" />
                            <% } %>
                        <% } else { %>
                            <input name="<% print('customFields[' + customField.id + ']') %>" type="radio" value="<% print(radio.id) %>" />
                        <% } %>
                        <span class="uv-radio-view"></span>
                    </div>
                    <span class="uv-radio-label"><% print(radio.name) %></span>
                </label>
            </div>
        <% }); %>
    <% } else if (customField.fieldType == 'checkbox') { %>
        <% _.each(customField.customFieldValues, function(checkbox) { %>
            <div class="uv-element-block uv-split-field">
                <label>
                    <div class="uv-checkbox">
                        <% if (typeof(ticketCustomField) != 'undefined' && ticketCustomField.hasOwnProperty('valueId')) { %>
                            <% if (_.contains(ticketCustomField.valueId, checkbox.id)) { %>
                                <input name="<% print('customFields[' + customField.id + ']') %>" type="checkbox" value="<% print(checkbox.id) %>" checked />
                            <% } else { %>
                                <input name="<% print('customFields[' + customField.id + ']') %>" type="checkbox" value="<% print(checkbox.id) %>" />
                            <% } %>
                        <% } else { %>
                            <input name="<% print('customFields[' + customField.id + ']') %>" type="checkbox" value="<% print(checkbox.id) %>" />
                        <% } %>
                        <span class="uv-checkbox-view"></span>
                    </div>
                    <span class="uv-checkbox-label"><% print(checkbox.name) %></span>
                </label>
            </div>
        <% }); %>
    <% } else if (customField.fieldType == 'date' || customField.fieldType == 'time' || customField.fieldType == 'datetime') { %>
        <input class="uv-field form-control uv-date-picker <% if (customField.fieldType == 'time') {print('time');} else {print('calendar');} %> uv-header-<% print(customField.fieldType) %>" type="text" name="<% print('customFields[' + customField.id + ']') %>" id="<% print('for' + customField.name + customField.id) %>" value="<% if (typeof(ticketCustomField) != 'undefined' && ticketCustomField.hasOwnProperty('id')) print(ticketCustomField.value) %>">
    <% } else if (customField.fieldType == 'file') { %>
        <input type="file" name="<% print('customFields[' + customField.id + ']') %>" class="uv-field" id="<% print('for' + customField.name + customField.id) %>">
    <% } %>
</script>

<script type="text/template" id="customfield-view-template">
    <% if (typeof(ticketCustomField.id) != 'undefined') { %>
        <label class="uv-field-label">
            <% print(customField.name) %>
        </label>
        <div class="uv-field-block">
        </div>
    <% } %>
</script>

<script type="text/template" id="customfield-edit-template">
    <% if (customField.agentType != 'customer') { %>
        <label class="uv-field-label">
            <% print(customField.name) %>
        </label>
        <% if (customField.fieldType == 'checkbox' || customField.fieldType == 'radio') { %>
            <div class="uv-field-block" style="padding-bottom: 10px;">
        <% } else { %>
            <div class="uv-field-block" >
        <% } %>
        </div>
    <% } %>
</script>

<script type="text/javascript">
    nl2br = function nl2br (str, breakTag = '<br>') {
        return !str ? '' : str.replace(/\\r\\n/g, breakTag).replace(/\\/g, '');
    };
    $(function () {
        var CustomFieldModel = Backbone.Model.extend({
            defaults: {
                ticketId : {{ ticket.id }},
            },
        });
        var TicketCustomFieldModel = Backbone.Model.extend({
            defaults: {
                ticketId : {{ ticket.id }},
            },
            validation: jQuery.extend(ticketSidebarCustomFieldValidation, {}),
        });
        var CustomFieldCollection = Backbone.Collection.extend({
            model : CustomFieldModel,
        });
        var CustomFieldRenderView = Backbone.View.extend({
            tagName: 'div',
            className: 'uv-element-block custom-field-field-display',
            attributes: {},
            customFieldViewTemplate: _.template($('#customfield-view-template').html()),
            customFieldViewNodeTemplate: _.template($('#customfield-view-node-template').html()),
            events : {
                'click .access-field': 'accessFieldData',
            },
            initialize: function(options) {
                _.extend(this, { options: options });
            },
            render: function() {
                this.$el.html(this.customFieldViewTemplate({
                    customField: this.model.toJSON(),
                    ticketCustomField: this.options.ticketCustomField
                }));
                $(this.$el).find('.uv-field-block').html(this.customFieldViewNodeTemplate({
                    customField: this.model.toJSON(),
                    ticketCustomField: this.options.ticketCustomField
                }));
                return this;
            },
            accessFieldData: function(e) {
                self = this;
                $.ajax({
                    url: "{{ path('uvdesk_form_component_ticket_custom_fields_decrypt_xhr', {ticketId: ticket.id}) }}",
                    data: $.extend({}, this.options.ticketCustomField, {'area': 'member'}),
                    method: 'POST',
                    success: function(response) {
                       
                        response = $.parseJSON(response);
                        self.options.ticketCustomField.value = response.value;
                        self.options.ticketCustomField.encrypted = response.encrypted;
                        self.render();
                    },
                    error: function(response) {
                        console.log('error: ', response);
                    }
                });
            }
        });
        var CustomFieldEditView = Backbone.View.extend({
            tagName: 'div',
            className: 'uv-element-block',
            customFieldEditTemplate: _.template($('#customfield-edit-template').html()),
            customFieldEditNodeTemplate: _.template($('#customfield-edit-node-template').html()),
            events : {},
            initialize: function(options) {
                _.extend(this, { "options": options });
            },
            render: function() {
                this.$el.html(this.customFieldEditTemplate({
                    customField: this.model.toJSON(),
                    ticketCustomField: this.options.ticketCustomField
                }));
                $(this.$el).find('.uv-field-block').html(this.customFieldEditNodeTemplate({
                    customField: this.model.toJSON(),
                    ticketCustomField: this.options.ticketCustomField
                }));
                return this;
            },
        });
        var CustomFieldCollectionView = Backbone.View.extend({
            el : $("#uv-customfield-view"),
            collectionEl: $('#customFieldCollection'),
            ticketCustomFieldCollection: $.parseJSON("{{ ticketCustomFieldCollection|json_encode|addslashes|raw }}"),
            customFieldCollection: new CustomFieldCollection($.parseJSON('{{ customFieldCollection|json_encode|addslashes|raw }}')),
            events : {
                'click .cfield-manage-pta': 'manageCustomField',
                'submit form[name="customFieldForm"]': 'handleFormSubmission',
                'click .cfield-pta-cancel': 'render',
            },
            initialize: function() {
                this.render();
            },
            render: function() {
                this.collectionEl.html('');
                $(this.el).find('.cfield-manage-pta').prev('.uv-field-label').html("{{ 'Manage Custom Fields'|trans }}");
                $(this.el).find('.cfield-manage-pta').fadeIn(10);
                    if (this.customFieldCollection.length != 0) {
                        if (this.ticketCustomFieldCollection.length != 0) {
                            _.each(this.customFieldCollection.models, function (customField) {
                            
                            if (this.ticketCustomFieldCollection.hasOwnProperty(customField.attributes.id) && this.ticketCustomFieldCollection[customField.attributes.id].value != '') { //&& this.ticketCustomFieldCollection[customField.attributes.id].value != '') {
                                    var customFieldRenderView = new CustomFieldRenderView({
                                        model: customField,
                                        ticketCustomField: this.ticketCustomFieldCollection[customField.attributes.id],
                                    });
                                    this.collectionEl.append(customFieldRenderView.render().el);
                                }
                            if( customField.attributes.fieldType == 'file')
                            {
                                this.ticketCustomFieldCollection[customField.attributes.id] = customField; 
                            }
                            }, this);
                        } else {
                            this.collectionEl.html("<p class='uv-no-more uv-text-center'>{{ 'No custom fields added to ticket.'|trans }}</p>");
                        }
                    } else {
                        this.collectionEl.html("<span class='uv-no-more uv-text-center'>{{ 'No custom fields defined.'|trans }}</span>");
                    }
                },
                manageCustomField: function() {
                    this.collectionEl.html('');
                    _.each(this.customFieldCollection.models, function (customField) {
                        var customFieldEditView = new CustomFieldEditView({
                            model: customField,
                            ticketCustomField: this.ticketCustomFieldCollection.hasOwnProperty(customField.attributes.id) ? this.ticketCustomFieldCollection[customField.attributes.id] : {},
                        });
                        this.collectionEl.append(customFieldEditView.render().el);
                    }, this);
                    $(this.el).find('.cfield-manage-pta').prev('.uv-field-label').html("{{ 'Update Custom Fields'|trans }}");
                    $(this.el).find('.cfield-manage-pta').fadeOut(10);
                    this.collectionEl.append(
                        '<div class="uv-action-buttons">' +
                            '<input type="submit" class="uv-btn" href="#" value="' + "{{ 'Save'|trans }}" + '">' +
                            '<button class="uv-btn cfield-pta-cancel" href="#">' + "{{ 'Cancel'|trans }}" + '</button>' +
                        '</div>'
                    );
                    $('.uv-header-date').datetimepicker({
                        format: 'YYYY-MM-DD',
                    });
                    $('.uv-header-time').datetimepicker({
                        format: 'LT',
                    });
                    $('.uv-header-datetime').datetimepicker({
                        format: 'YYYY-MM-DD H:m:s'
                    });
                },
                handleFormSubmission: function(e) {
                    e.preventDefault();
                    self = this;
                    Backbone.Validation.bind(this);
                    var formData = $(e.currentTarget).serializeObject();
                    this.model.set(formData);
                    if (this.model.isValid(true)) {
                        var submissionData = new FormData();
                        submissionData.set('area', 'user');
                        _.each(this.model.toJSON(), function (fieldValue, fieldName) {
                            if (fieldValue != '') {
                                submissionData.set(fieldName, fieldValue);
                            }
                        });
                        var fileList = $('#customFieldCollection').find('input[type="file"]');
                        if (fileList.length > 0) {
                            _.each(fileList, function (field) {
                                if ($(field)[0].files.length != 0) {
                                    submissionData.set($(field)[0].name, $(field)[0].files[0] );
                                }
                            });
                        }
                        $.ajax({
                            url: "{{ path('uvdesk_form_component_ticket_custom_fields_xhr') }}",
                            data: submissionData,
                            cache: false,
                            contentType: false,
                            processData: false,
                            type: 'POST',
                            success: function(response) {
                                response = $.parseJSON(response);
                                if (response.hasOwnProperty('ticketCustomFieldsValuesCollection')) {
                                    self.ticketCustomFieldCollection = response.ticketCustomFieldsValuesCollection;
                
                                    console.log(response.ticketCustomFieldsValuesCollection); 
                                    self.render();
                                    if(response.needRefresh) {
                                        $('#webkul-ecommerce-order-details').append("<div><p class='uv-field-info'>{{ 'order details may have been updated'|trans }}.</p><p><a href='' class='uv-btn-small'>{{ 'Refresh Page'|trans }}</a></p></div>");
                                    }
                                } else {
                                    console.log('collection not received');
                                }
                            },
                            error: function(response) {
                                console.log('error: ', response);
                            }
                        });
                    }
                },
        });
        var customFieldCollectionView = new CustomFieldCollectionView({
            model: new TicketCustomFieldModel()
        });
    });
</script>